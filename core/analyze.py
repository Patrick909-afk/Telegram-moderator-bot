def analyze_conflict(text: str) -> str:
    # –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∞–Ω–∞–ª–∏–∑ ‚Äî –º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —É–ª—É—á—à–∏—Ç—å (–Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Ç.–ø.)
    text_lower = text.lower()
    
    if "–æ–±–º–∞–Ω—É–ª" in text_lower or "–æ–±–º–∞–Ω" in text_lower:
        return "–ü–æ—Ö–æ–∂–µ, —á–µ–ª–æ–≤–µ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–Ω–æ–≤–∞—Ç. ‚ùå"
    elif "–±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã" in text_lower or "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ" in text_lower:
        return "–ï—Å—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ, —á—Ç–æ –ø–æ—Å—Ç—É–ø–æ–∫ –±—ã–ª –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤. ü§î"
    elif "–æ—Å–∫–æ—Ä–±–∏–ª" in text_lower or "–º–∞—Ç" in text_lower:
        return "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã. –í–µ—Ä–æ—è—Ç–Ω–æ, –≤–∏–Ω–æ–≤–µ–Ω. üö´"
    else:
        return "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –≤—ã–Ω–µ—Å–µ–Ω–∏—è –≤–µ—Ä–¥–∏–∫—Ç–∞. üïµÔ∏è"
